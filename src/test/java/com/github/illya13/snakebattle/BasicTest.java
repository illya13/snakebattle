package com.github.illya13.snakebattle;


import com.codenjoy.dojo.services.Direction;
import com.github.illya13.snakebattle.board.Board;
import com.github.illya13.snakebattle.solver.BFSSolver;
import com.github.illya13.snakebattle.solver.GASolver;
import com.github.illya13.snakebattle.state.StateImpl;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.lang.reflect.Field;


public class BasicTest {
    private Bootstrap ai;

    @Before
    public void setup() {
        ai = new Bootstrap(new BFSSolver(), null);
    }

    @After
    public void shutdown() {
        ai.solver.shutdown();
    }

    private Board board(String board) {
        return (Board) new Board().forString(board);
    }

    @Test
    public void rewardTest1() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                         ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#              ○    ☼\n" +
                "☼☼                       ○   ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼             $  ☼#         ☼\n" +
                "☼☼●     ☼☼☼  ○ ®   ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#   ● ○     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●      ○       ☼       ☼\n" +
                "☼#             ○         ○   ☼\n" +
                "☼☼○                       ●  ☼\n" +
                "☼☼       ®         ☼#       ╓☼\n" +
                "☼#   ○   ☼☼ ☼               ║☼\n" +
                "☼☼      ○   ☼     ●         ║☼\n" +
                "☼☼    ©  ☼☼ ☼               ║☼\n" +
                "☼#          ☼               ║☼\n" +
                "☼☼         ☼#            ╔══╝☼\n" +
                "☼☼                 ┌>○◄╗ ║   ☼\n" +
                "☼#                 │☼☼☼║ ║   ☼\n" +
                "☼☼                 └─┐ ║ ║   ☼\n" +
                "☼☼               ☼☼☼#│ ╚═╝   ☼\n" +
                "☼#               ×───┘       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                         ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#              ○    ☼\n" +
                "☼☼                       ○   ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼             $  ☼#         ☼\n" +
                "☼☼●     ☼☼☼  ○ ®   ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#   ● ○     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●      ○       ☼       ☼\n" +
                "☼#             ○         ○ $ ☼\n" +
                "☼☼○                       ●  ☼\n" +
                "☼☼       ®         ☼#       ╓☼\n" +
                "☼#   ○   ☼☼ ☼               ║☼\n" +
                "☼☼      ○   ☼     ●         ║☼\n" +
                "☼☼    ©  ☼☼ ☼               ║☼\n" +
                "☼#          ☼               ║☼\n" +
                "☼☼         ☼#            ╔══╝☼\n" +
                "☼☼                 ┌─☺═╗ ║   ☼\n" +
                "☼#                 │☼☼☼║ ║   ☼\n" +
                "☼☼                 └─┐ ║ ║   ☼\n" +
                "☼☼               ☼☼☼#│ ╚═╝   ☼\n" +
                "☼#                ×──┘       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.UP, 121);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                         ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#              ○    ☼\n" +
                "☼☼                       ○   ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼             $  ☼#         ☼\n" +
                "☼☼●     ☼☼☼  ○ ®   ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#   ● ○     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●      ○       ☼       ☼\n" +
                "☼#             ○         ○ $ ☼\n" +
                "☼☼○                       ●  ☼\n" +
                "☼☼       ®         ☼#        ☼\n" +
                "☼#   ○   ☼☼ ☼                ☼\n" +
                "☼☼      ○   ☼     ●          ☼\n" +
                "☼☼    ©  ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#        ▲       ☼\n" +
                "☼☼                   ╚═╗     ☼\n" +
                "☼#                  ☼☼☼║     ☼\n" +
                "☼☼                     ║     ☼\n" +
                "☼☼               ☼☼☼#  ╚╕    ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.RIGHT, 171);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                         ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#              ○    ☼\n" +
                "☼☼                       ○   ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼             $  ☼#         ☼\n" +
                "☼☼●     ☼☼☼  ○ ®   ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#   ● ○     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●      ○       ☼       ☼\n" +
                "☼#             ○         ○ $ ☼\n" +
                "☼☼○                       ●  ☼\n" +
                "☼☼       ®         ☼#        ☼\n" +
                "☼#   ○   ☼☼ ☼                ☼\n" +
                "☼☼      ○   ☼     ●          ☼\n" +
                "☼☼    ©  ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#        ☻       ☼\n" +
                "☼☼                   ╚═╗     ☼\n" +
                "☼#                  ☼☼☼║     ☼\n" +
                "☼☼                     ║     ☼\n" +
                "☼☼               ☼☼☼#  ╚╕    ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest2() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼○            ╓             ☼\n" +
                "☼# ○         ● ║           ● ☼\n" +
                "☼☼             ║  ☼#         ☼\n" +
                "☼☼      ☼☼☼    ║   ☼  ☼      ☼\n" +
                "☼#      ☼      ╚►  ☼  ☼ $    ☼\n" +
                "☼☼      ☼○     ˄○  ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    │         ●●  ☼\n" +
                "☼#             │☼#           ☼\n" +
                "☼☼             │         ○  $☼\n" +
                "☼☼    ●        │     ☼       ☼\n" +
                "☼#            ×┘     ©       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼              © ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                    ○      ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼        $                  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.DOWN);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼○                          ☼\n" +
                "☼# ○         ● ╓           ● ☼\n" +
                "☼☼             ║  ☼#         ☼\n" +
                "☼☼      ☼☼☼    ║   ☼  ☼      ☼\n" +
                "☼#      ☼      ╚╗  ☼  ☼ $    ☼\n" +
                "☼☼      ☼○     ┌☻  ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    │         ●●  ☼\n" +
                "☼#             │☼#           ☼\n" +
                "☼☼             │         ○  $☼\n" +
                "☼☼    ●        │     ☼       ☼\n" +
                "☼#             ¤     ©       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼              © ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                    ○      ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼        $                  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest3() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                    ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#   ○     ○         ☼\n" +
                "☼☼        ●                  ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   ○    ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼           ○   ●  ☼\n" +
                "☼#æ             ☼#           ☼\n" +
                "☼☼│                  ○       ☼\n" +
                "☼☼│   ● ○            ☼       ☼\n" +
                "☼#│                          ☼\n" +
                "☼☼│                          ☼\n" +
                "☼☼└──┐             ☼#        ☼\n" +
                "☼#   │   ☼☼ ☼          ○  ○○ ☼\n" +
                "☼☼ ● │      ☼     ●          ☼\n" +
                "☼☼┌──┘   ☼☼ ☼           $    ☼\n" +
                "☼#│         ☼                ☼\n" +
                "☼☼└♦       ☼#             $  ☼\n" +
                "☼☼╔═►                    ○   ☼\n" +
                "☼#║     ○           ☼☼☼      ☼\n" +
                "☼☼║               ○        ○ ☼\n" +
                "☼☼║    ╓         ☼☼☼#     ○  ☼\n" +
                "☼#║    ║               ●     ☼\n" +
                "☼☼║    ║            ©       ®☼\n" +
                "☼☼╚════╝                ○    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                    ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#   ○     ○         ☼\n" +
                "☼☼        ●                  ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   ○    ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼           ○   ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼æ                  ○       ☼\n" +
                "☼☼│   ● ○            ☼       ☼\n" +
                "☼#│                          ☼\n" +
                "☼☼│                          ☼\n" +
                "☼☼└──┐             ☼#        ☼\n" +
                "☼#   │   ☼☼ ☼          ○  ○○ ☼\n" +
                "☼☼ ● │      ☼     ●          ☼\n" +
                "☼☼┌──┘   ☼☼ ☼           $    ☼\n" +
                "☼#│         ☼                ☼\n" +
                "☼☼└┐       ☼#             $  ☼\n" +
                "☼☼╔♦═►                   ○   ☼\n" +
                "☼#║     ○           ☼☼☼      ☼\n" +
                "☼☼║               ○        ○ ☼\n" +
                "☼☼║              ☼☼☼#     ○  ☼\n" +
                "☼#║    ╓               ●     ☼\n" +
                "☼☼║    ║            ©       ®☼\n" +
                "☼☼╚════╝                ○    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);
    }

    @Test
    public void rewardTest4() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○          ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○  ®☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼       ●        ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ○  ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#    ○         ☼#           ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#             ○     ●       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●      ●   ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼○        ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#╔╕      ☼\n" +
                "☼#               ◄═══╝       ☼\n" +
                "☼☼               ○<───ö      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.DOWN);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○          ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○  ®☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼       ●        ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ○  ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#    ○         ☼#           ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#             ○     ●       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●      ●   ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼○        ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#╔╕      ☼\n" +
                "☼#               ╔═══╝       ☼\n" +
                "☼☼               ☺───ö       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT, 51);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○          ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○  ®☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼       ●        ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ○  ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#    ○         ☼#           ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#             ○     ●       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●      ●   ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼○        ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#               ╓           ☼\n" +
                "☼☼               ║           ☼\n" +
                "☼☼               ▼           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT, 101);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○          ○      ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○  ®☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼       ●        ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ○  ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#    ○         ☼#           ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#             ○     ●       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●      ●   ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼○        ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#               ╓           ☼\n" +
                "☼☼               ║           ☼\n" +
                "☼☼               ☻           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest5() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○           ○     ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼ æ    ☼○         ☼  ☼      ☼\n" +
                "☼☼ │    ☼☼☼               ●  ☼\n" +
                "☼# └>           ☼#           ☼\n" +
                "☼☼ ╘═╗                      $☼\n" +
                "☼☼   ▼●              ☼       ☼\n" +
                "☼#             ○             ☼\n" +
                "☼☼                  ○        ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼      ○                    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○           ○     ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼ æ    ☼☼☼               ●  ☼\n" +
                "☼# └┐           ☼#           ☼\n" +
                "☼☼  ☺╗                      $☼\n" +
                "☼☼   ║●              ☼       ☼\n" +
                "☼#   ▼         ○             ☼\n" +
                "☼☼                  ○        ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼      ○                  ○ ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN, 40);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○           ○     ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼   ╓                      $☼\n" +
                "☼☼   ║●              ☼       ☼\n" +
                "☼#   ║         ○             ☼\n" +
                "☼☼   ▼              ○        ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼      ○                  ○ ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.DOWN, 90);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○           ○     ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼   ╓                      $☼\n" +
                "☼☼   ║●              ☼       ☼\n" +
                "☼#   ║         ○             ☼\n" +
                "☼☼   ☻              ○        ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼      ○                  ○ ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest6() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼       $                   ☼\n" +
                "☼# ○                         ☼\n" +
                "☼☼    ○ ☼#               ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼     ˄          ☼#         ☼\n" +
                "☼☼     │☼☼☼     ○  ☼  ☼®     ☼\n" +
                "☼# ┌┐  │☼          ☼  ☼      ☼\n" +
                "☼☼ │└──┘☼ ○        ☼  ☼ ©   ●☼\n" +
                "☼☼ │    ☼☼☼                  ☼\n" +
                "☼# │      ╓     ☼#®          ☼\n" +
                "☼☼ │      ║                  ☼\n" +
                "☼☼ │  ●   ╚╗         ☼      ●☼\n" +
                "☼# │       ║                 ☼\n" +
                "☼☼ │       ║                 ☼\n" +
                "☼☼ │       ║       ☼#        ☼\n" +
                "☼# │     ☼☼║☼  ○             ☼\n" +
                "☼☼ │       ║☼ ●   ●   ●      ☼\n" +
                "☼☼ │    ●☼☼║☼                ☼\n" +
                "☼# └───┐ ╔═╝☼                ☼\n" +
                "☼☼ ┌┐  │ ╚╗☼#                ☼\n" +
                "☼☼┌┘└──┘● ╚════╗       ●   ○ ☼\n" +
                "☼#└───ö        ║    ☼☼☼      ☼\n" +
                "☼☼             ║             ☼\n" +
                "☼☼            ╔╝ ☼☼☼#        ☼\n" +
                "☼#          ╔═╝              ☼\n" +
                "☼☼          ╚═══► ○          ☼\n" +
                "☼☼                   ○    ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);

        StateImpl state = (StateImpl)ai.state;
        setStep(state, 299);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼       $                   ☼\n" +
                "☼# ○                         ☼\n" +
                "☼☼    ○ ☼#               ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#     ˄     ●               ☼\n" +
                "☼☼     │          ☼#         ☼\n" +
                "☼☼     │☼☼☼     ○  ☼  ☼®     ☼\n" +
                "☼# ┌┐  │☼          ☼  ☼      ☼\n" +
                "☼☼ │└──┘☼ ○        ☼  ☼ ©   ●☼\n" +
                "☼☼ │    ☼☼☼                  ☼\n" +
                "☼# │            ☼#®          ☼\n" +
                "☼☼ │      ╓                  ☼\n" +
                "☼☼ │  ●   ╚╗         ☼      ●☼\n" +
                "☼# │       ║                 ☼\n" +
                "☼☼ │       ║                 ☼\n" +
                "☼☼ │       ║       ☼#        ☼\n" +
                "☼# │     ☼☼║☼  ○             ☼\n" +
                "☼☼ │       ║☼ ●   ●   ●      ☼\n" +
                "☼☼ │    ●☼☼║☼                ☼\n" +
                "☼# └───┐ ╔═╝☼                ☼\n" +
                "☼☼ ┌┐  │ ╚╗☼#                ☼\n" +
                "☼☼┌┘└──┘● ╚════╗       ●   ○ ☼\n" +
                "☼#└──ö         ║    ☼☼☼      ☼\n" +
                "☼☼             ║             ☼\n" +
                "☼☼            ╔╝ ☼☼☼#        ☼\n" +
                "☼#          ╔═╝              ☼\n" +
                "☼☼          ╚════►○          ☼\n" +
                "☼☼                   ○    ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);
        Assert.assertEquals(ai.state.enemies().get(0).reward(), 50);

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼       $                   ☼\n" +
                "☼# ○                         ☼\n" +
                "☼☼    ○ ☼#               ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#     ☺     ●               ☼\n" +
                "☼☼     │          ☼#         ☼\n" +
                "☼☼     │☼☼☼     ○  ☼  ☼®     ☼\n" +
                "☼# ┌┐  │☼          ☼  ☼      ☼\n" +
                "☼☼ │└──┘☼ ○        ☼  ☼ ©   ●☼\n" +
                "☼☼ │    ☼☼☼                  ☼\n" +
                "☼# │            ☼#®          ☼\n" +
                "☼☼ │      ╓                  ☼\n" +
                "☼☼ │  ●   ╚╗         ☼      ●☼\n" +
                "☼# │       ║                 ☼\n" +
                "☼☼ │       ║                 ☼\n" +
                "☼☼ │       ║       ☼#        ☼\n" +
                "☼# │     ☼☼║☼  ○             ☼\n" +
                "☼☼ │       ║☼ ●   ●   ●      ☼\n" +
                "☼☼ │    ●☼☼║☼                ☼\n" +
                "☼# └───┐ ╔═╝☼                ☼\n" +
                "☼☼ ┌┐  │ ╚╗☼#                ☼\n" +
                "☼☼┌┘└──┘● ╚════╗       ●   ○ ☼\n" +
                "☼#└──ö         ║    ☼☼☼      ☼\n" +
                "☼☼             ║             ☼\n" +
                "☼☼            ╔╝ ☼☼☼#        ☼\n" +
                "☼#          ╔═╝              ☼\n" +
                "☼☼          ╚════☻○          ☼\n" +
                "☼☼                   ○    ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", "");
    }

    @Test
    public void rewardTest7() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                     ┌───┐ ☼\n" +
                "☼#                     │  ┌┘ ☼\n" +
                "☼☼      ☼#      ┌──┐  ┌┘  │╔╗☼\n" +
                "☼☼              ¤  └──┘ ╔╗│║║☼\n" +
                "☼#           ●          ║║˅║║☼\n" +
                "☼☼                ☼#    ║╚═╝║☼\n" +
                "☼☼      ☼☼☼        ☼  ☼ ╙   ▼☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ○          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼       ○        ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#    ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#   ○         ○    ☼☼☼      ☼\n" +
                "☼☼  ●                        ☼\n" +
                "☼☼             ○ ☼☼☼#        ☼\n" +
                "☼#     ●                     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                     ┌───┐ ☼\n" +
                "☼#                     │  ┌┘ ☼\n" +
                "☼☼      ☼#      ×──┐  ┌┘  │╔╗☼\n" +
                "☼☼                 └──┘ ╔╗│║║☼\n" +
                "☼#           ●          ║║│║║☼\n" +
                "☼☼                ☼#    ╙╚☺╝║☼\n" +
                "☼☼      ☼☼☼        ☼  ☼ ○  ◄╝☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ○          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼       ○        ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#    ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#   ○         ○    ☼☼☼      ☼\n" +
                "☼☼  ●                        ☼\n" +
                "☼☼             ○ ☼☼☼#        ☼\n" +
                "☼#     ●                     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT, 220);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                 ╔╗☼\n" +
                "☼☼                      ╔╗ ║║☼\n" +
                "☼#           ●          ╙║ ║║☼\n" +
                "☼☼                ☼#     ╚═╝║☼\n" +
                "☼☼      ☼☼☼        ☼  ☼ ○ ◄═╝☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ○          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼       ○        ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#    ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#   ○         ○    ☼☼☼      ☼\n" +
                "☼☼  ●                        ☼\n" +
                "☼☼             ○ ☼☼☼#○       ☼\n" +
                "☼#     ●                     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT, 270);
    }

    @Test
    public void rewardTest8() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼   ┌────┐        ○         ☼\n" +
                "☼#   │    │   ○            ○ ☼\n" +
                "☼☼   │  ☼#│                  ☼\n" +
                "☼☼   │    ¤                 ○☼\n" +
                "☼#   │                       ☼\n" +
                "☼☼   ˅            ☼#╔══╗     ☼\n" +
                "☼☼      ☼☼☼        ☼╚►☼║     ☼\n" +
                "☼#      ☼          ☼  ☼║     ☼\n" +
                "☼☼      ☼          ☼  ☼║     ☼\n" +
                "☼☼      ☼☼☼     ╘════╗ ║  ●  ☼\n" +
                "☼#    ○         ☼#   ╚═╝     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼      ●☼\n" +
                "☼#          ●                ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#       ○☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼                ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                 ○○        ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                   ○       ☼\n" +
                "☼☼                        ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼   ┌────┐        ○         ☼\n" +
                "☼#   │    │   ○            ○ ☼\n" +
                "☼☼   │  ☼#¤                  ☼\n" +
                "☼☼   │                      ○☼\n" +
                "☼#   │                       ☼\n" +
                "☼☼   │            ☼#╔══╗     ☼\n" +
                "☼☼   ˅  ☼☼☼        ☼╚═☻║     ☼\n" +
                "☼#      ☼          ☼  ☼║     ☼\n" +
                "☼☼      ☼          ☼  ☼║     ☼\n" +
                "☼☼      ☼☼☼      ╘═══╗ ║  ●  ☼\n" +
                "☼#    ○         ☼#   ╚═╝     ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼      ●☼\n" +
                "☼#          ●                ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼         $       ☼#       ○☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼                ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                 ○○        ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                   ○       ☼\n" +
                "☼☼                        ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
        Assert.assertEquals(ai.state.enemies().get(0).reward(), 50);
    }

    @Test
    public void rewardTest9() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   <──ö ☼  ☼      ☼\n" +
                "☼#      ☼  ◄═══╗   ☼  ☼      ☼\n" +
                "☼☼      ☼○     ║   ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ╙          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   ┌─ö  ☼  ☼      ☼\n" +
                "☼#      ☼ ◄═══☺╗   ☼  ☼      ☼\n" +
                "☼☼      ☼○     ╙   ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT, 40);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼◄═════╕   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN, 90);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼☻═════╕   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest10() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   <──ö ☼  ☼      ☼\n" +
                "☼#         ◄═══╗   ☼  ☼      ☼\n" +
                "☼☼      ☼○     ║   ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ╙          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼  <──ö ☼  ☼       ☼\n" +
                "☼#       ●◄═══╗   ☼  ☼       ☼\n" +
                "☼☼      ☼☼    ║   ☼  ☼       ☼\n" +
                "☼☼      ☼☼☼   ╙          ●   ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼ <──ö ☼  ☼        ☼\n" +
                "☼#       ◄═══╗   ☼  ☼        ☼\n" +
                "☼☼      ☼☼   ║   ☼  ☼        ☼\n" +
                "☼☼      ☼☼☼  ╙          ●    ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT, 5);
    }

    @Test
    public void rewardTest11() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼   <──ö ☼  ☼      ☼\n" +
                "☼#        ©◄═══╗   ☼  ☼      ☼\n" +
                "☼☼      ☼○     ║   ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼    ╙          ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼  <──ö ☼  ☼       ☼\n" +
                "☼#       ●♠═══╗   ☼  ☼       ☼\n" +
                "☼☼      ☼☼    ║   ☼  ☼       ☼\n" +
                "☼☼      ☼☼☼   ╙          ●   ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○ ○               ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼ <──ö ☼  ☼        ☼\n" +
                "☼#       ♠═══╗   ☼  ☼        ☼\n" +
                "☼☼      ☼☼   ║   ☼  ☼        ☼\n" +
                "☼☼      ☼☼☼  ╙          ●    ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼●☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼     ○ ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
    }

    @Test
    public void rewardTest12() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼      ☼#       ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●      ○        ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼ ●☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#  ○  ♣─┐☼\n" +
                "☼#       ☼☼ ☼               ¤☼\n" +
                "☼☼     ○    ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#   æ      ☼                ☼\n" +
                "☼☼ ┌─┘     ☼#                ☼\n" +
                "☼☼ │                         ☼\n" +
                "☼# │                ☼☼☼      ☼\n" +
                "☼☼ ˅  ●                      ☼\n" +
                "☼☼ ○             ☼☼☼#        ☼\n" +
                "☼# ▲                         ☼\n" +
                "☼☼ ║                         ☼\n" +
                "☼☼ ╚═══╕                     ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.UP);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼      ☼#       ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●      ○        ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼ ●☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#  ○ ♣──ö☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼     ○    ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼ ┌ö      ☼#                ☼\n" +
                "☼☼ │                         ☼\n" +
                "☼# │                ☼☼☼      ☼\n" +
                "☼☼ │  ●                      ☼\n" +
                "☼☼ ☺             ☼☼☼#        ☼\n" +
                "☼# ║                         ☼\n" +
                "☼☼ ║                         ☼\n" +
                "☼☼ ╚══╕                      ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT, 1);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "*ø              ☼#           ☼\n" +
                "☼☼○                         $☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#             ○             ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "*ø       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "*ø          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "~&                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", "");
    }

    @Test
    public void rewardTest13() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼      ☼#       ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●      ○        ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼ ●☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#  ○  ♣─┐☼\n" +
                "☼#       ☼☼ ☼               ¤☼\n" +
                "☼☼     ○    ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#   æ      ☼                ☼\n" +
                "☼☼ ┌─┘     ☼#                ☼\n" +
                "☼☼ │                         ☼\n" +
                "☼# │                ☼☼☼      ☼\n" +
                "☼☼ ˅  ●                      ☼\n" +
                "☼☼ ○             ☼☼☼#        ☼\n" +
                "☼# ▲                         ☼\n" +
                "☼☼ ║                         ☼\n" +
                "☼☼ ╚═══╕                     ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.UP);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼      ☼#       ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●      ○        ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼ ●☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#  ○ ♣──ö☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼     ○    ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼ ┌ö                        ☼\n" +
                "☼# │                ☼☼☼      ☼\n" +
                "☼☼ │  ●                      ☼\n" +
                "☼☼ ☺             ☼☼☼#        ☼\n" +
                "☼# ║                         ☼\n" +
                "☼☼ ║                         ☼\n" +
                "☼☼ ╚══╕                      ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT, 51);
    }

    @Test
    public void parseTest1() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                   ☼\n" +
                "☼☼   ○                       ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ●  ☼\n" +
                "☼#      ☼        æ ☼  ☼      ☼\n" +
                "☼☼      ☼○       │ ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼      └┐       ●  ☼\n" +
                "☼#       ○○     ☼#│          ☼\n" +
                "☼☼             ╘╗ │          ☼\n" +
                "☼☼    ●        ╔╝ │  ☼       ☼\n" +
                "☼#             ╚╗┌┘          ☼\n" +
                "☼☼              ♦┘           ☼\n" +
                "☼☼     ○           ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼○      ☼☼ ☼                ☼\n" +
                "☼#         ○☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                ○          ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                         ● ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼  ○                        ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                   ☼\n" +
                "☼☼   ○                       ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼   ●  ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼○       æ ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼      └┐       ●  ☼\n" +
                "☼#       ○○     ☼#│          ☼\n" +
                "☼☼              ╓ │          ☼\n" +
                "☼☼    ●        ╔╝ │  ☼       ☼\n" +
                "☼#             ╚╗┌┘          ☼\n" +
                "☼☼             ♥┌┘           ☼\n" +
                "☼☼     ○        ♦  ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼○      ☼☼ ☼                ☼\n" +
                "☼#         ○☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                ○          ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                         ● ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼  ○                        ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
    }

    @Test
    public void parseTest2() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#         ˄         ☼\n" +
                "☼☼                 │    ○    ☼\n" +
                "☼# ○         ●     ¤         ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼# æ            ☼#           ☼\n" +
                "☼☼˄˅                        $☼\n" +
                "☼☼│   ●              ☼       ☼\n" +
                "☼#¤            ○             ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼# ╘►               ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼×>    ○        ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.RIGHT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○                 ☼\n" +
                "☼#                           ☼\n" +
                "☼☼  ○   ☼#         ┌>        ☼\n" +
                "☼☼                 ¤    ○    ☼\n" +
                "☼# ○         ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼      ☼○         ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼┌☺☺                       $☼\n" +
                "☼☼¤   ●              ☼       ☼\n" +
                "☼#             ○             ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#  ╘►              ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼ ×>   ○        ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.RIGHT);
    }

    @Test
    public void parseTest3() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                  ○☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼     ○☼          ☼  ☼      ☼\n" +
                "☼☼   ○  ☼☼☼╔══════╕       ●  ☼\n" +
                "☼#     ♦◄══╝    ☼#           ☼\n" +
                "☼☼  ˄  └───────────ö         ☼\n" +
                "☼☼  │ ●              ☼       ☼\n" +
                "☼#  │                        ☼\n" +
                "☼☼  │                        ☼\n" +
                "☼☼  │              ☼#        ☼\n" +
                "☼#  │    ☼☼ ☼                ☼\n" +
                "☼☼  │       ☼   ● ●          ☼\n" +
                "☼☼  └┐   ☼☼ ☼                ☼\n" +
                "☼#   │      ☼                ☼\n" +
                "☼☼   └───ö ☼#                ☼\n" +
                "☼☼     ●                     ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼              ●         ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.RIGHT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                  ○☼\n" +
                "☼☼                           ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼     ○☼          ☼  ☼      ☼\n" +
                "☼☼   ○ ♦☼☼☼╔═════╕        ●  ☼\n" +
                "☼#  ˄  │═══╝    ☼#           ☼\n" +
                "☼☼  │  └──────────ö          ☼\n" +
                "☼☼  │ ●              ☼       ☼\n" +
                "☼#  │                        ☼\n" +
                "☼☼  │                        ☼\n" +
                "☼☼  │              ☼#        ☼\n" +
                "☼#  │    ☼☼ ☼                ☼\n" +
                "☼☼  │       ☼   ● ●          ☼\n" +
                "☼☼  └┐   ☼☼ ☼                ☼\n" +
                "☼#   │      ☼                ☼\n" +
                "☼☼   └──ö  ☼#                ☼\n" +
                "☼☼     ●                     ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼              ●         ○  ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.UP);
    }

    @Test
    public void parseTest4() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼           ╔╗┌───♣         ☼\n" +
                "☼#           ╚╗│           ○ ☼\n" +
                "☼☼      ☼#    ♠¤       ○   ○ ☼\n" +
                "☼☼            ╚╗             ☼\n" +
                "☼#             ╙             ☼\n" +
                "☼☼    ○      ●    ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼                  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                   ☼       ☼\n" +
                "☼#             ○ ●           ☼\n" +
                "☼☼˄                          ☼\n" +
                "☼☼│              ● ☼#        ☼\n" +
                "☼#│      ☼☼ ☼                ☼\n" +
                "☼☼│         ☼                ☼\n" +
                "☼☼│      ☼☼ ☼                ☼\n" +
                "☼#│         ☼                ☼\n" +
                "☼☼│        ☼#                ☼\n" +
                "☼☼│                          ☼\n" +
                "☼#│  æ              ☼☼☼      ☼\n" +
                "☼☼│  │                       ☼\n" +
                "☼☼│  │           ☼☼☼#        ☼\n" +
                "☼#│  │                       ☼\n" +
                "☼☼└──┘                       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼           ╔╗┌────♣        ☼\n" +
                "☼#           ╚╗¤           ○ ☼\n" +
                "☼☼      ☼#   ♠╝        ○   ○ ☼\n" +
                "☼☼            ╚╕             ☼\n" +
                "☼#                           ☼\n" +
                "☼☼    ○      ●    ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼                  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                   ☼       ☼\n" +
                "☼#˄            ○ ●           ☼\n" +
                "☼☼│                          ☼\n" +
                "☼☼│              ● ☼#        ☼\n" +
                "☼#│      ☼☼ ☼                ☼\n" +
                "☼☼│         ☼                ☼\n" +
                "☼☼│      ☼☼ ☼                ☼\n" +
                "☼#│         ☼                ☼\n" +
                "☼☼│        ☼#                ☼\n" +
                "☼☼│                          ☼\n" +
                "☼#│                 ☼☼☼      ☼\n" +
                "☼☼│  æ                       ☼\n" +
                "☼☼│  │           ☼☼☼#        ☼\n" +
                "☼#│  │                       ☼\n" +
                "☼☼└──┘                       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
    }

    @Test
    public void parseTest5() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼# ┌┐  ┌─ö                   ☼\n" +
                "☼☼ ˅└──┘☼#╔╗                 ☼\n" +
                "☼☼  ┌┐×┐  ▼║                 ☼\n" +
                "☼# ┌♦┘ ˅   ║ ●               ☼\n" +
                "☼☼○│       ╙      ☼#         ☼\n" +
                "☼☼ ¤   ●☼☼☼  ┌┐    ☼  ☼      ☼\n" +
                "☼#      ☼    ˅¤    ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼       ○                   ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                    ○      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●       ●  ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#            ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#      ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼   ○                       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼# ┌┐  ┌ö                    ☼\n" +
                "☼☼ │└──┘☼#╔╗                 ☼\n" +
                "☼☼ ˅┌┐ æ ◄╝║                 ☼\n" +
                "☼# ┌┌┘ │   ╙ ●               ☼\n" +
                "☼☼○¤˅  ˅          ☼#         ☼\n" +
                "☼☼ ●   ●☼☼☼  ┌ö    ☼  ☼      ☼\n" +
                "☼#      ☼    │     ☼  ☼      ☼\n" +
                "☼☼      ☼    ˅     ☼  ☼     ○☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼       ○                   ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                    ○      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●       ●  ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#            ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#      ○ ☼\n" +
                "☼#                           ☼\n" +
                "☼☼   ○                       ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
    }

    @Test
    public void parseTest6() {
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼  ╔═══╗   ┌ö               ☼\n" +
                "☼#  ║  ╔╝   │                ☼\n" +
                "☼☼  ║  ║☼#  │                ☼\n" +
                "☼☼  ║  ║    │                ☼\n" +
                "☼#  ▼  ║    │┌─>             ☼\n" +
                "☼☼     ║    └┘    ☼#    ○    ☼\n" +
                "☼☼     ╙☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#         ○ ☼\n" +
                "☼☼        ●                  ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                          ®☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#  ●    ☼☼ ☼                ☼\n" +
                "☼☼  ○    ○  ☼     ●         ○☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#    æ     ☼                ☼\n" +
                "☼☼    │    ☼#            ○  $☼\n" +
                "☼☼    │                      ☼\n" +
                "☼#    │             ☼☼☼      ☼\n" +
                "☼☼    └┐                     ☼\n" +
                "☼☼     │         ☼☼☼#        ☼\n" +
                "☼#     │                     ☼\n" +
                "☼☼     │     ×──┐            ☼\n" +
                "☼☼     └───────>˅● ○         ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼  ╔═══╗   æ                ☼\n" +
                "☼#  ║  ╔╝   │                ☼\n" +
                "☼☼  ║  ║☼#  │                ☼\n" +
                "☼☼  ║  ║    │                ☼\n" +
                "☼#  ║  ║    │┌──>            ☼\n" +
                "☼☼  ▼  ╙    └┘    ☼#    ○    ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#         ○ ☼\n" +
                "☼☼        ●                  ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                          ®☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#  ●    ☼☼ ☼                ☼\n" +
                "☼☼  ○    ○  ☼     ●         ○☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼    æ    ☼#            ○  $☼\n" +
                "☼☼    │                      ☼\n" +
                "☼#    │             ☼☼☼      ☼\n" +
                "☼☼    └┐                     ☼\n" +
                "☼☼     │         ☼☼☼#        ☼\n" +
                "☼#     │                     ☼\n" +
                "☼☼     │      ×─┐            ☼\n" +
                "☼☼     └────────│● ○         ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☺☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);

        ((StateImpl.MeImpl)ai.state.me()).overwriteDirection(Direction.RIGHT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼˄<──────ö                  ☼\n" +
                "☼#│ ┌┐                       ☼\n" +
                "☼☼│ ˅│  ☼#                   ☼\n" +
                "☼☼│┌─┘                       ☼\n" +
                "☼#││         ●               ☼\n" +
                "☼☼││          ╔╕  ☼#         ☼\n" +
                "☼☼││    ☼☼☼   ║    ☼  ☼      ☼\n" +
                "☼#│¤    ☼     ║    ☼  ☼      ☼\n" +
                "☼☼¤     ☼     ║  ○ ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼   ║           ●  ☼\n" +
                "☼#          ╔═╝ ☼#           ☼\n" +
                "☼☼          ║                ☼\n" +
                "☼☼    ●     ║        ☼       ☼\n" +
                "☼#          ╚═►              ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#       ©☼\n" +
                "☼#       ☼☼ ☼            ○   ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼               ○☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼   ●  ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#  ○     ☼\n" +
                "☼#           ○               ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼        ○             ●    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.RIGHT);
        assertAI("☼☼☺☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼☺──────ö                   ☼\n" +
                "☼#│ ┌ö                       ☼\n" +
                "☼☼│ └>  ☼#                   ☼\n" +
                "☼☼│                          ☼\n" +
                "☼#│          ●               ☼\n" +
                "☼☼│           ╓   ☼#         ☼\n" +
                "☼☼│     ☼☼☼   ║    ☼  ☼      ☼\n" +
                "☼#¤     ☼     ║    ☼  ☼      ☼\n" +
                "☼☼      ☼     ║  ○ ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼   ║           ●  ☼\n" +
                "☼#          ╔═╝ ☼#           ☼\n" +
                "☼☼          ║                ☼\n" +
                "☼☼    ●     ║        ☼       ☼\n" +
                "☼#          ╚══►             ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                 ☼#       ©☼\n" +
                "☼#       ☼☼ ☼            ○   ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼               ○☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼   ●  ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#  ○     ☼\n" +
                "☼#           ○               ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼        ○             ●    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.UP);
    }

    @Test
    public void gaTest1() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼         ○           ○     ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#         ○         ☼\n" +
                "☼☼                      ○    ☼\n" +
                "☼#           ●               ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼      ○   ☼  ☼      ☼\n" +
                "☼☼ æ    ☼○         ☼  ☼      ☼\n" +
                "☼☼ │    ☼☼☼               ●  ☼\n" +
                "☼# └>           ☼#           ☼\n" +
                "☼☼ ╘═╗                      $☼\n" +
                "☼☼   ▼●              ☼       ☼\n" +
                "☼#             ○             ☼\n" +
                "☼☼                  ○        ☼\n" +
                "☼☼   ○             ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●     ○    ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼           ○               ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼      ○        ☼☼☼#    ○   ☼\n" +
                "☼#         ○                 ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼      ○                    ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
    }

    @Test
    public void gaTest2() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼   ○  <┐ ┌┐                ☼\n" +
                "☼#      ●└─┘│                ☼\n" +
                "☼☼  ○   ☼#  │                ☼\n" +
                "☼☼ ○      ○ │              ○ ☼\n" +
                "☼# ○        │●●      ©       ☼\n" +
                "☼☼      ®   ¤     ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#    ● ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#         ▲    ☼#         ® ☼\n" +
                "☼☼      <─┐║                 ☼\n" +
                "☼☼    ● ┌─┘║<──┐   ● ☼       ☼\n" +
                "☼#      ¤  ╙   │             ☼\n" +
                "☼☼             │             ☼\n" +
                "☼☼             ¤   ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ☼☼☼#        ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.RIGHT);
    }

    @Test
    public void gaTest3() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼      ☼#                   ☼\n" +
                "☼☼            ©         ○    ☼\n" +
                "☼#                           ☼\n" +
                "☼☼             ●  ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼          ☼  ☼   ●  ☼\n" +
                "☼☼   ♦  ☼☼☼                  ☼\n" +
                "☼#   │         ●☼#           ☼\n" +
                "☼☼   └───┐ ×────>○◄╕         ☼\n" +
                "☼☼    ●  │           ☼       ☼\n" +
                "☼#       │                   ☼\n" +
                "☼☼       ¤                   ☼\n" +
                "☼☼             ®   ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼                ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼  ○      ☼#        <┐      ☼\n" +
                "☼☼       ○         ┌──┘      ☼\n" +
                "☼#              $ ┌┘☼☼☼      ☼\n" +
                "☼☼          ○     └──┐       ☼\n" +
                "☼☼               ☼☼☼#└ö      ☼\n" +
                "☼#    ®                      ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼   ○                       ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
    }

    @Test
    public void gaTest4() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼                           ☼\n" +
                "☼#                          ○☼\n" +
                "☼☼      ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                ☼#         ☼\n" +
                "☼☼      ☼☼☼        ☼  ☼      ☼\n" +
                "☼#      ☼ æ  ●     ☼  ☼  ×──┐☼\n" +
                "☼☼      ☼ └┐       ☼  ☼   ▲ │☼\n" +
                "☼☼      ☼☼☼˅              ║ │☼\n" +
                "☼#              ☼#        ╚╕│☼\n" +
                "☼☼                          │☼\n" +
                "☼☼    ●              ☼      │☼\n" +
                "☼#        ○                 │☼\n" +
                "☼☼    ®                     │☼\n" +
                "☼☼                 ☼#       ♦☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼     ˄    ☼    ○●          ☼\n" +
                "☼☼     │ ☼☼ ☼                ☼\n" +
                "☼#     │    ☼                ☼\n" +
                "☼☼     │   ☼#      ○         ☼\n" +
                "☼☼     │                     ☼\n" +
                "☼#     │            ☼☼☼      ☼\n" +
                "☼☼     ¤                     ☼\n" +
                "☼☼               ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼    ●                      ☼\n" +
                "☼☼                          ○☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
    }

    @Test
    public void gaTest5() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼        ╔╕                 ☼\n" +
                "☼#        ▼                  ☼\n" +
                "☼☼  ○   ☼#                   ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○ ○     ˄            ○    ☼\n" +
                "☼☼         │      ☼#         ☼\n" +
                "☼☼      ☼☼☼│       ☼  ☼      ☼\n" +
                "☼#      ☼×─┘       ☼  ☼      ☼\n" +
                "☼☼   ●  ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                ○          ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼            æ   ☼\n" +
                "☼#          ☼            │   ☼\n" +
                "☼☼         ☼#            ˅   ☼\n" +
                "☼☼                       ○   ☼\n" +
                "☼# ○                ☼☼☼      ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼               ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼        ╓                  ☼\n" +
                "☼#        ║                  ☼\n" +
                "☼☼  ○   ☼#▼                  ☼\n" +
                "☼☼                           ☼\n" +
                "☼# ○ ○    <┐            ○    ☼\n" +
                "☼☼         │      ☼#         ☼\n" +
                "☼☼      ☼☼☼│       ☼  ☼      ☼\n" +
                "☼#      ☼ ×┘       ☼  ☼      ☼\n" +
                "☼☼   ●  ☼          ☼  ☼      ☼\n" +
                "☼☼      ☼☼☼               ●  ☼\n" +
                "☼#              ☼#           ☼\n" +
                "☼☼○                          ☼\n" +
                "☼☼    ●              ☼       ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                ○          ☼\n" +
                "☼☼                 ☼#        ☼\n" +
                "☼#       ☼☼ ☼               ○☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼            æ   ☼\n" +
                "☼#          ☼            │   ☼\n" +
                "☼☼         ☼#            │   ☼\n" +
                "☼☼                       ˅   ☼\n" +
                "☼# ○                ☼☼☼      ☼\n" +
                "☼☼               ○           ☼\n" +
                "☼☼               ☼☼☼#    ○   ☼\n" +
                "☼#                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
    }

    @Test
    public void gaTest6() {
        ai.solver = new GASolver();

        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼ ┌───┐    $   ○            ☼\n" +
                "☼# └┐● │    © ○              ☼\n" +
                "☼☼  │ ┌┘☼#                   ☼\n" +
                "☼☼  │ ¤                      ☼\n" +
                "☼#  │        ●       ○       ☼\n" +
                "☼☼  │             ☼#         ☼\n" +
                "☼☼  │   ☼☼☼        ☼  ☼      ☼\n" +
                "☼#  │   ☼ ○        ☼  ☼      ☼\n" +
                "☼☼  │   ☼          ☼  ☼      ☼\n" +
                "☼☼  └──┐☼☼☼            ●  ●  ☼\n" +
                "☼#     └──┐     ☼#           ☼\n" +
                "☼☼   ○    │                  ☼\n" +
                "☼☼        └───┐      ☼ $     ☼\n" +
                "☼#            ♣    ○         ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ® ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼●◄═╗       $    ☼\n" +
                "☼#          ☼   ║            ☼\n" +
                "☼☼         ☼#  ╔╝            ☼\n" +
                "☼☼             ╙             ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼   ○            ©    ○     ☼\n" +
                "☼☼               ☼☼☼#○       ☼\n" +
                "☼#®                      ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n", Direction.LEFT);
        assertAI("☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼\n" +
                "☼☼ ┌───┐    $   ○            ☼\n" +
                "☼# └┐● │    © ○              ☼\n" +
                "☼☼  │ ×┘☼#                   ☼\n" +
                "☼☼  │                        ☼\n" +
                "☼#  │        ●       ○       ☼\n" +
                "☼☼  │             ☼#         ☼\n" +
                "☼☼  │   ☼☼☼        ☼  ☼      ☼\n" +
                "☼#  │   ☼ ○        ☼  ☼      ☼\n" +
                "☼☼  │   ☼          ☼  ☼      ☼\n" +
                "☼☼  └──┐☼☼☼            ●  ●  ☼\n" +
                "☼#     └──┐     ☼#           ☼\n" +
                "☼☼   ○    │                  ☼\n" +
                "☼☼ ○      └───┐      ☼ $     ☼\n" +
                "☼#            └♣   ○         ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼               ® ☼#        ☼\n" +
                "☼#       ☼☼ ☼                ☼\n" +
                "☼☼          ☼     ●          ☼\n" +
                "☼☼       ☼☼ ☼◄══╕       $    ☼\n" +
                "☼#          ☼                ☼\n" +
                "☼☼         ☼#                ☼\n" +
                "☼☼                           ☼\n" +
                "☼#                  ☼☼☼      ☼\n" +
                "☼☼   ○            ©    ○     ☼\n" +
                "☼☼               ☼☼☼#○       ☼\n" +
                "☼#®                      ○   ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼                           ☼\n" +
                "☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼", Direction.DOWN);
    }

    private void assertAI(String board, Direction expected) {
        String actual = ai.get(board(board));
        Assert.assertEquals(expected.toString(), actual);
    }

    private void assertAI(String board, Direction expected, int reward) {
        String actual = ai.get(board(board));
        Assert.assertEquals(expected.toString(), actual);
        Assert.assertEquals(reward, ai.state.me().reward());
    }

    private void assertAI(String board, String string) {
        String actual = ai.get(board(board));
        Assert.assertEquals(string, actual);
    }

    static Field stepField;

    static void setStep(StateImpl state, int step) {
        try {
            stepField.set(state, step);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        }
    }

    static {
        try {
            stepField = StateImpl.class.getDeclaredField("step");
            stepField.setAccessible(true);
        } catch (NoSuchFieldException ignored) {
            // no op
        }
    }

}
